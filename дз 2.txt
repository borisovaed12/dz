{
  "metadata": {
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    },
    "kernelspec": {
      "name": "python",
      "display_name": "Python (Pyodide)",
      "language": "python"
    }
  },
  "nbformat_minor": 4,
  "nbformat": 4,
  "cells": [
    {
      "cell_type": "code",
      "source": "#1 удвоить число\na = int(await(input()))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": " 646\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "print(a*2)",
      "metadata": {
        "trusted": true
      },
      "execution_count": 3,
      "outputs": [
        {
          "name": "stdout",
          "text": "1292\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "print(a**2)",
      "metadata": {
        "trusted": true
      },
      "execution_count": 12,
      "outputs": [
        {
          "name": "stdout",
          "text": "12544\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "#3 вывести часть суток\na = int(await(input()))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": " 19\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "b = int(await(input()))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": " 54\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "c = int(await(input()))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": " 12\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "v = a*3600 + b*60 + 1\nprint('seconds:',v)\nprint('day part:',v / (24*3600))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 7,
      "outputs": [
        {
          "name": "stdout",
          "text": "seconds: 71641\nday part: 0.8291782407407408\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "#4 оканчивается ли число на 7\na = int(await(input()))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": " 345437\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "if a % 10 == 7:\n    print('TRUE')\nelse:\n    print('FALSE')",
      "metadata": {
        "trusted": true
      },
      "execution_count": 10,
      "outputs": [
        {
          "name": "stdout",
          "text": "TRUE\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "#5 корни квадратного уравнения\na = abs(int(await(input('a = '))))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "a =  6\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "b = abs(int(await(input('b = '))))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "b =  16\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "c = abs(int(await(input('c = '))))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "c =  - 26\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "if c < 0:\n    c == (-1)*c\nelse:\n    c == 1*c\nif a < 0:\n    a == (-1)*a\nelif a > 0:\n    a == 1*a\nif b < 0:\n    b == (-1)*b\nelif b > 0:\n    b == 1*b\nD = b ** 2 - 4 * a * c\nif a != 0:\n    if D > 0:\n        x1 = (((-1)*b) + (D**0.5)) / (2*a)\n        x2 = (((-1)*b) - (D**0.5)) / (2*a)\n        print('x1 = ', x1, 'x2 = ', x2)\n    elif D == 0:\n        x = - b / (2 * a)\n        print('x = ', x)\n    else:\n        print('корней нет')",
      "metadata": {
        "trusted": true
      },
      "execution_count": 19,
      "outputs": [
        {
          "name": "stdout",
          "text": "x1 =  -0.3615080175257832 x2 =  -2.3051586491408833\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "#6 максимум из чисел\na = int(await(input('Введите число1 = ')))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "Введите число1 =  4\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "b = int(await(input('Введите число2 = ')))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "Введите число2 =  14\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "c = int(await(input('Введите число3 = ')))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "Введите число3 =  5\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "m = a\nif m<b:\n    m=b\nif m<c:\n    m=c\nprint(m)",
      "metadata": {
        "trusted": true
      },
      "execution_count": 6,
      "outputs": [
        {
          "name": "stdout",
          "text": "14\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "#7 среднее арифметическое\na = int(await(input()))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": " 23\n"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "k = 0\ns = 0\nfor i in range(1,a+1):\n    if (i % 5 == 0) or (i % 2 == 0):\n        s += i\n        k += 1\nprint(format(s/k,'.2f'))",
      "metadata": {
        "trusted": true
      },
      "execution_count": 8,
      "outputs": [
        {
          "name": "stdout",
          "text": "11.69\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": "",
      "metadata": {},
      "execution_count": null,
      "outputs": []
    }
  ]
}